plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.taskmate"
    compileSdkVersion 35
    ndkVersion "26.3.11579264"

    // Add this namespace for resource linking
    buildFeatures {
        buildConfig true
        resValues true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        // Enable core library desugaring
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.taskmate"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true

        // Add these for AGP 8.x compatibility
        vectorDrawables.useSupportLibrary = true
        generatedDensities = []
    }

    // Add this block for dexing workaround
    dexOptions {
        javaMaxHeapSize "4g"
        keepRuntimeAnnotatedClasses false
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // Add these for release builds
            shrinkResources true
            crunchPngs true
        }
        debug {
            signingConfig signingConfigs.debug
            // Disable PNG crunching for faster builds
            crunchPngs false
        }
    }

    // Add this for packaging options
    packagingOptions {
        resources {
            excludes += ['META-INF/*.kotlin_module', 'META-INF/AL2.0', 'META-INF/LGPL2.1']
        }
    }

    // Add this Kotlin toolchain specification
    kotlin {
        jvmToolchain(17)
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.10" // Explicit version
    implementation 'androidx.multidex:multidex:2.0.1'

    // Add these AndroidX core dependencies
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    
    // Add core library desugaring dependency
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
}